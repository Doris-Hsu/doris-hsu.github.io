apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: memsql
  name: memsql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: memsql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/prod: "true"
        io.kompose.service: memsql
    spec:
      containers:
      - env:
        - name: AGG_MEMORY_LIMIT
          value: "4"
        - name: CONSUL_AGENT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT
              name: global-env
        - name: CONSUL_AGENT_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT_PORT
              name: global-env
        - name: CONSUL_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_PORT
              name: global-env
        - name: CONSUL_SERVER
          valueFrom:
            configMapKeyRef:
              key: CONSUL_SERVER
              name: global-env
        - name: CRT_CA_BUNDLE
          valueFrom:
            configMapKeyRef:
              key: CRT_CA_BUNDLE
              name: global-env
        - name: CRT_PRIVATE_KEY
          valueFrom:
            configMapKeyRef:
              key: CRT_PRIVATE_KEY
              name: global-env
        - name: LEAF_MEMORY_LIMIT
          value: "124"
        - name: LICENSE_KEY
          value: BDk3ZmFhNGU3YmJmOTQ5N2I5N2RmY2E4ZWEzZTAxYjVlAAAAAAAAAAAAAAIAAAAAAAQwNQIZAJGgtcrXzs18QzlKPsIo5SNnwVxqxH6gEwIYbWq/m+E3/flYcFfIm3ERvsxjtlbaz7O5AA==
        - name: MEMSQL_NODE_ROLE
          value: AIO
        - name: MEMSQL_PASSWORD
          value: password
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_PASSWORD
              name: global-env
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_USERNAME
              name: global-env
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_PASS
              name: global-env
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_USER
              name: global-env
        - name: REDIS_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: REDIS_DEFAULT_PASS
              name: global-env
        - name: log_level_containerpilot
          valueFrom:
            configMapKeyRef:
              key: log_level_containerpilot
              name: global-env
        image: {{ .Values.memsql.image }}
        name: memsql
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/memsql
          name: memsql-hostpath0
        - mountPath: /backup
          name: memsql-hostpath1
      restartPolicy: Always
      imagePullSecrets:
      - name: {{ .Chart.Name }}-nvidia-registrykey-secret
      volumes:
      - hostPath:
          path: /ssd/memsql
        name: memsql-hostpath0
      - hostPath:
          path: /storage/backup_memsql
        name: memsql-hostpath1
status: {}
