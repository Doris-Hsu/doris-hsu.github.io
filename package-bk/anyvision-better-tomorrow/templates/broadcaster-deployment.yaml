apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: broadcaster
  name: broadcaster
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broadcaster
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/prod: "true"
        io.kompose.service: broadcaster
    spec:
      containers:
      - env:
        - name: BCAST_RMQ_CONN_STRING
          valueFrom:
            configMapKeyRef:
              key: BCAST_RMQ_CONN_STRING
              name: broadcaster-env
        - name: BCAST_RMQ_ONLY_SUBJECTS
          valueFrom:
            configMapKeyRef:
              key: BCAST_RMQ_ONLY_SUBJECTS
              name: broadcaster-env
        - name: BCAST_SOCKETIO_API_URL
          value: https://api.default:5443
        - name: CONSUL_AGENT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT
              name: global-env
        - name: CONSUL_AGENT_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT_PORT
              name: global-env
        - name: CONSUL_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_PORT
              name: global-env
        - name: CONSUL_SERVER
          valueFrom:
            configMapKeyRef:
              key: CONSUL_SERVER
              name: global-env
        - name: CRT_CA_BUNDLE
          valueFrom:
            configMapKeyRef:
              key: CRT_CA_BUNDLE
              name: global-env
        - name: CRT_PRIVATE_KEY
          valueFrom:
            configMapKeyRef:
              key: CRT_PRIVATE_KEY
              name: global-env
        - name: ENABLE_CHOWN
          value: "false"
        - name: ENABLE_DOCKER_LOG
          valueFrom:
            configMapKeyRef:
              key: ENABLE_DOCKER_LOG
              name: broadcaster-env
        - name: ENABLE_DOCKER_STDOUT
          valueFrom:
            configMapKeyRef:
              key: ENABLE_DOCKER_STDOUT
              name: broadcaster-env
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_PASSWORD
              name: global-env
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_USERNAME
              name: global-env
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_PASS
              name: global-env
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_USER
              name: global-env
        - name: REDIS_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: REDIS_DEFAULT_PASS
              name: global-env
        - name: RUN_AS_USER
          value: user
        - name: api_service_ip
          value: api.default
        - name: log_level_containerpilot
          valueFrom:
            configMapKeyRef:
              key: log_level_containerpilot
              name: global-env
        image: {{ .Values.broadcaster.image }}
        name: broadcaster
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/share/ca-certificates
          name: broadcaster-hostpath0
        - mountPath: /etc/localtime
          name: broadcaster-hostpath1
          readOnly: true
      hostname: broadcaster
      restartPolicy: Always
      imagePullSecrets:
      - name: {{ .Chart.Name }}-nvidia-registrykey-secret
      volumes:
      - hostPath:
          path: /usr/local/share/ca-certificates
        name: broadcaster-hostpath0
      - hostPath:
          path: /etc/localtime
        name: broadcaster-hostpath1
status: {}
