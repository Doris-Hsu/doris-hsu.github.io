apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: cron
  name: cron
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cron
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /home/centos/k3/kompose convert --chart --volumes hostPath
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.network/prod: "true"
        io.kompose.service: cron
    spec:
      initContainers:
      - name: init-crontab
        image: {{ .Values.init.image }}
        command: ['/bin/sh', '-c']
        args:
        - |
          [ ! "$(ls -A /crontab)" ] && cp -rf /tmp/crontab/* /crontab/;
          true;
        volumeMounts:
        - mountPath: /crontab
          name: cron-hostpath1
      containers:
      - env:
        - name: CONSUL_AGENT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT
              name: global-env
        - name: CONSUL_AGENT_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_AGENT_PORT
              name: global-env
        - name: CONSUL_PORT
          valueFrom:
            configMapKeyRef:
              key: CONSUL_PORT
              name: global-env
        - name: CONSUL_SERVER
          valueFrom:
            configMapKeyRef:
              key: CONSUL_SERVER
              name: global-env
        - name: CRT_CA_BUNDLE
          valueFrom:
            configMapKeyRef:
              key: CRT_CA_BUNDLE
              name: global-env
        - name: CRT_PRIVATE_KEY
          valueFrom:
            configMapKeyRef:
              key: CRT_PRIVATE_KEY
              name: global-env
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_PASSWORD
              name: global-env
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: MONGO_INITDB_ROOT_USERNAME
              name: global-env
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_PASS
              name: global-env
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_DEFAULT_USER
              name: global-env
        - name: REDIS_DEFAULT_PASS
          valueFrom:
            configMapKeyRef:
              key: REDIS_DEFAULT_PASS
              name: global-env
        - name: TO_DATE_TRACK_DELETE
          value: "30"
        - name: log_level_containerpilot
          valueFrom:
            configMapKeyRef:
              key: log_level_containerpilot
              name: global-env
        image: {{ .Values.cron.image }}
        name: cron
        resources: {}
        volumeMounts:
        - mountPath: /var/www/html
          name: cron-hostpath0
        - mountPath: /etc/crontabs/crontab
          name: cron-hostpath1
          subPath: site_crontab
        - mountPath: /etc/localtime
          name: cron-hostpath2
          readOnly: true
      restartPolicy: Always
      imagePullSecrets:
      - name: {{ .Chart.Name }}-nvidia-registrykey-secret
      volumes:
      - hostPath:
          path: /storage
        name: cron-hostpath0
      - persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-crontab-pvc
        name: cron-hostpath1
      - hostPath:
          path: /etc/localtime
        name: cron-hostpath2
status: {}
